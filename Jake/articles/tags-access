<!--{
    "title":       "@access",
    "out":         "tags-access.html",
    "description": "Specify the access level of this member - private, public, or protected."
}-->
<h3>Syntax</h3>
<code>@access &lt;private|protected|public&gt;</code>

<h3>Overview</h3>

<p>The @access tag specifies the access level of a member. Note that "@access private" is the same as "@private", "@access protected" is the same as "@protected", and "@access public" is the same as "@public" which is the same as not including the tag at all. Private members will not show in the output documentation unless JSDoc is given the <code>--private</code> option.
</p>

<p>
Note that a doclet's <em>access level</em> is different from its <em>scope</em>. For example, if "Parent" has an inner variable "child" that is documented as @public, "child" will still be treated as an inner variable with the namepath "Parent~child".
To change a doclet's scope, see the <a href="tags-instance.html">@instance</a>, <a href="tags-static.html">@static</a>, and <a href="tags-global.html">@global</a> tags.
</p>

<h3>Examples</h3>

{{#example}}@access is a synonym for @private, @protected, @public.
/** @constructor */
function Thingy() {

    /** @access private */
    var foo = 0;

    /** @access protected */
    this._bar = 1;

    /** @access public */
    this.pez = 2;

}

// same as...

/** @constructor */
function OtherThingy() {

    /** @private */
    var foo = 0;

    /** @protected */
    this._bar = 1;

    /** @public */
    this.pez = 2;

}
{{/example}}

<h3>See Also</h3>

<ul>
    <li><a href="tags-private.html">@private</a> and the <a href="about-commandline.html">--private command-line option</a>.</li>
    <li><a href="tags-protected.html">@protected</a></li>
    <li><a href="tags-public.html">@public</a></li>
    <li><a href="tags-instance.html">@instance</a>, <a href="tags-static.html">@static</a> and <a href="tags-global.html">@global</a> for modifying the <em>scope</em> of a doclet.</li>
</ul>
