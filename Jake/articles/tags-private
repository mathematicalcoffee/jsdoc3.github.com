<!--{
    "title":       "@private",
    "out":         "tags-private.html",
    "description": "This symbol is meant to be private."
}-->
<h3>Overview</h3>

<p>
The @private tag marks a symbol as private, or not meant for general use. Private members are not
shown in the generated output unless JSDoc is run with the <code>-p</code> or <code>--private</code>
switch.
</p>

<p>
The @private tag is not inherited by child members. For example, if the @private tag is added to a
namespace, members of the namespace can still appear in the generated output; because the namespace
is private, the members' namepath will not include the namespace.
</p>

<p>
The @private tag is equivalent to "@access private". See <a href="tags-access.html">@access</a> for
details about the @access tag.
</p>

<h3>Examples</h3>

<p>
In the following example, <code>Documents</code> and <code>Documents.Newspaper</code> appear in the
generated documentation, but not <code>Documents.Diary</code>.
</p>

{{#example}}Using the @private tag
/** @namespace */
var Documents = {
    /**
     * An ordinary newspaper.
     */
    Newspaper: 1,
    /**
     * My diary.
     * @private
     */
    Diary: 2
};
{{/example}}

<h3>See Also</h3>
<ul>
    <li><a href="tags-protected.html">@protected</a></li>
    <li><a href="tags-public.html">@public</a></li>
    <li><a href="tags-access.html">@access</a></li>
    <li><a href="about-commandline.html">Command-line Options to JSDoc</a></li>
    <li><a href="tags-instance.html">@instance</a>, <a href="tags-static.html">@static</a>, and
    <a href="tags-global.html">@global</a></li>
</ul>
